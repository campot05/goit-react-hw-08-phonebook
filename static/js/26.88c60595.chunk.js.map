{"version":3,"file":"static/js/26.88c60595.chunk.js","mappings":"sQACA,EAA6D,6BAA7D,EAAiG,2B,4DCU7FA,EAAaC,EAAAA,KAAaC,MAAM,CAClCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAEJK,QACC,yEAEDF,WACHG,SAAUN,EAAAA,KAEPK,QAAQ,sBACRF,aAGQI,EAAe,WAAO,IAAD,YAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,SACNC,UAAUC,EAAAA,EAAAA,GAAYd,KALtBe,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAMTE,EAAQ,mCAAG,WAAMC,GAAN,gFACfA,EAAEC,iBACIC,EAAOF,EAAEG,cACTC,EAAO,CACXrB,KAAMmB,EAAKG,SAAStB,KAAKuB,MACzBrB,MAAOiB,EAAKG,SAASpB,MAAMqB,MAC3BnB,SAAUe,EAAKG,SAASlB,SAASmB,OANpB,SAQO1B,EAAW2B,QAAQH,GAR1B,mCAUbf,GACEmB,EAAAA,EAAAA,IAAa,CACXzB,KAAMmB,EAAKG,SAAStB,KAAKuB,MACzBrB,MAAOiB,EAAKG,SAASpB,MAAMqB,MAC3BnB,SAAUe,EAAKG,SAASlB,SAASmB,SAGrCJ,EAAKO,QAjBQ,iDAmBNC,EAAAA,OAAAA,QAAe,8BAnBT,4CAAH,sDAuBRC,IAAoB,OAACd,QAAD,IAACA,GAAD,UAACA,EAAQd,YAAT,QAAC,EAAc6B,UAAW,wBAC9CC,IACH,OAAChB,QAAD,IAACA,GAAD,UAACA,EAAQZ,aAAT,QAAC,EAAe2B,UAAW,6BACxBE,IACH,OAACjB,QAAD,IAACA,GAAD,UAACA,EAAQV,gBAAT,QAAC,EAAkByB,UACpB,6DAEF,OACE,UAACG,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,IAE1BC,YAAU,EACVC,aAAa,MACbrB,SAAU,SAAAC,GAAC,OAAIJ,EAAaG,EAASC,GAA1B,EACXqB,UAAWC,EARb,WAUE,SAACC,EAAA,GAAD,gBACEC,GAAG,mBACHC,MAAM,OACNC,QAAQ,WACRC,KAAK,OACL5C,KAAK,OACL6C,WAAS,EACT5C,UAAQ,GACJW,EAAS,SARf,IASEkC,QAAQ,OAAChC,QAAD,IAACA,GAAD,UAACA,EAAQd,YAAT,QAAC,EAAc6B,SACvBkB,WAAYnB,MAEd,SAACY,EAAA,GAAD,gBACEC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WACRC,KAAK,QACL5C,KAAK,QACL6C,WAAS,EACT5C,UAAQ,GACJW,EAAS,UARf,IASEkC,QAAQ,OAAChC,QAAD,IAACA,GAAD,UAACA,EAAQZ,aAAT,QAAC,EAAe2B,SACxBkB,WAAYjB,MAEd,SAACU,EAAA,GAAD,gBACEC,GAAG,mBACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACL5C,KAAK,WACL6C,WAAS,EACT5C,UAAQ,GACJW,EAAS,aARf,IASEkC,QAAQ,OAAChC,QAAD,IAACA,GAAD,UAACA,EAAQV,gBAAT,QAAC,EAAkByB,SAC3BkB,WAAYhB,MAEd,mBAAQa,KAAK,SAASN,UAAWC,EAAjC,sBAsBL,ECrIc,SAASS,IACtB,OACE,0BACE,SAAC3C,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"RegisterForm_label__4pTXF\",\"button\":\"RegisterForm_button__B3hFq\",\"form\":\"RegisterForm_form__Tv43W\",\"input\":\"RegisterForm_input__FsgBz\"};","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useDispatch } from 'react-redux';\nimport css from './RegisterForm.module.css';\nimport { registerUser } from 'redux/auth/auth-operations';\nimport { Notify } from 'notiflix';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nlet userSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup\n    .string()\n    .matches(\n      /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{1,6}$/\n    )\n    .required(),\n  password: yup\n    .string()\n    .matches(/^[a-zA-Z\\d\\W]{6,}$/)\n    .required(),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(userSchema),\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const data = {\n      name: form.elements.name.value,\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    };\n    const isValid = await userSchema.isValid(data);\n    if (isValid) {\n      dispatch(\n        registerUser({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      );\n      form.reset();\n    } else {\n      return Notify.failure('Please enter correct data');\n    }\n  };\n\n  const errorMessageName = !!errors?.name?.message && 'Field cannot be empty';\n  const errorMessageEmail =\n    !!errors?.email?.message && 'Please enter correct email';\n  const errorMessagePassword =\n    !!errors?.password?.message &&\n    'Password must contain at least 6 characters and/or numbers';\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1 },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => handleSubmit(onSubmit(e))}\n      className={css.form}\n    >\n      <TextField\n        id=\"outlined-basic 2\"\n        label=\"Name\"\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"name\"\n        fullWidth\n        required\n        {...register('name')}\n        error={!!errors?.name?.message}\n        helperText={errorMessageName}\n      />\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"email\"\n        name=\"email\"\n        fullWidth\n        required\n        {...register('email')}\n        error={!!errors?.email?.message}\n        helperText={errorMessageEmail}\n      />\n      <TextField\n        id=\"outlined-basic 3\"\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        name=\"password\"\n        fullWidth\n        required\n        {...register('password')}\n        error={!!errors?.password?.message}\n        helperText={errorMessagePassword}\n      />\n      <button type=\"submit\" className={css.button}>\n        Log In\n      </button>\n    </Box>\n    //  <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n    //    <label className={css.label}>\n    //      Username\n    //      <input type=\"text\" name=\"name\" />\n    //    </label>\n    //    <label className={css.label}>\n    //      Email\n    //      <input type=\"email\" name=\"email\" />\n    //    </label>\n    //    <label className={css.label}>\n    //      Password\n    //      <input type=\"password\" name=\"password\" />\n    //    </label>\n    //    <button type=\"submit\" className={css.button}>\n    //      Register\n    //    </button>\n    //  </form>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["userSchema","yup","shape","name","required","email","matches","password","RegisterForm","dispatch","useDispatch","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","e","preventDefault","form","currentTarget","data","elements","value","isValid","registerUser","reset","Notify","errorMessageName","message","errorMessageEmail","errorMessagePassword","Box","component","sx","m","noValidate","autoComplete","className","css","TextField","id","label","variant","type","fullWidth","error","helperText","Login"],"sourceRoot":""}