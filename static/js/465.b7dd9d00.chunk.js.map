{"version":3,"file":"static/js/465.b7dd9d00.chunk.js","mappings":"2RACA,EAAuB,wBAAvB,EAA0H,0B,wCCWtHA,EAAaC,EAAAA,KAAaC,MAAM,CAClCC,MAAOF,EAAAA,KAEJG,QACC,yEAEDC,WACHC,SAAUL,EAAAA,KAAaI,aAGZE,EAAY,WAAO,IAAD,QACvBC,GAAWC,EAAAA,EAAAA,MAEjB,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,SACNC,UAAUC,EAAAA,EAAAA,GAAYb,KALtBc,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAMTE,EAAQ,mCAAG,WAAMC,GAAN,gFACfA,EAAEC,iBACIC,EAAOF,EAAEG,cACTC,EAAO,CACXpB,MAAOkB,EAAKG,SAASrB,MAAMsB,MAC3BnB,SAAUe,EAAKG,SAASlB,SAASmB,OALpB,SAQOzB,EAAW0B,QAAQH,GAR1B,mCAWbf,GACEmB,EAAAA,EAAAA,IAAM,CACJxB,MAAOkB,EAAKG,SAASrB,MAAMsB,MAC3BnB,SAAUe,EAAKG,SAASlB,SAASmB,SAGrCJ,EAAKO,QAjBQ,iDAmBNC,EAAAA,OAAAA,QAAe,8BAnBT,4CAAH,sDAuBRC,IACH,OAACd,QAAD,IAACA,GAAD,UAACA,EAAQb,aAAT,QAAC,EAAe4B,UAAW,6BACxBC,IACH,OAAChB,QAAD,IAACA,GAAD,UAACA,EAAQV,gBAAT,QAAC,EAAkByB,UAAW,wBAEjC,OACE,UAACE,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,IAE1BC,YAAU,EACVC,aAAa,MACbpB,SAAU,SAAAC,GAAC,OAAIJ,EAAaG,EAASC,GAA1B,EACXoB,UAAWC,EARb,WAUE,SAACC,EAAA,GAAD,gBACEC,GAAG,mBACHC,MAAM,QACNC,QAAQ,WACRC,KAAK,QACLC,KAAK,QACLC,WAAS,EACT1C,UAAQ,GACJS,EAAS,UARf,IASEkC,QAAQ,OAAChC,QAAD,IAACA,GAAD,UAACA,EAAQb,aAAT,QAAC,EAAe4B,SACxBkB,WAAYnB,MAEd,SAACW,EAAA,GAAD,gBACEC,GAAG,iBACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLC,KAAK,WACLC,WAAS,EACT1C,UAAQ,GACJS,EAAS,aARf,IASEkC,QAAQ,OAAChC,QAAD,IAACA,GAAD,UAACA,EAAQV,gBAAT,QAAC,EAAkByB,SAC3BkB,WAAYjB,MAEd,mBAAQa,KAAK,SAASN,UAAWC,EAAjC,sBAKL,ECnGc,SAASU,IACtB,OACE,0BACE,SAAC3C,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"button\":\"LoginForm_button__LodJg\"};","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Notify } from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport css from './LoginForm.module.css';\n\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nlet userSchema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(\n      /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{1,6}$/\n    )\n    .required(),\n  password: yup.string().required(),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(userSchema),\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const data = {\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    };\n\n    const isValid = await userSchema.isValid(data);\n\n    if (isValid) {\n      dispatch(\n        logIn({\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      );\n      form.reset();\n    } else {\n      return Notify.failure('Please enter correct data');\n    }\n  };\n\n  const errorMessageEmail =\n    !!errors?.email?.message && 'Please enter correct email';\n  const errorMessagePassword =\n    !!errors?.password?.message && 'Field cannot be empty';\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1 },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => handleSubmit(onSubmit(e))}\n      className={css.form}\n    >\n      <TextField\n        id=\"outlined-basic 1\"\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"email\"\n        name=\"email\"\n        fullWidth\n        required\n        {...register('email')}\n        error={!!errors?.email?.message}\n        helperText={errorMessageEmail}\n      />\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        name=\"password\"\n        fullWidth\n        required\n        {...register('password')}\n        error={!!errors?.password?.message}\n        helperText={errorMessagePassword}\n      />\n      <button type=\"submit\" className={css.button}>\n        Log In\n      </button>\n    </Box>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["userSchema","yup","shape","email","matches","required","password","LoginForm","dispatch","useDispatch","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","e","preventDefault","form","currentTarget","data","elements","value","isValid","logIn","reset","Notify","errorMessageEmail","message","errorMessagePassword","Box","component","sx","m","noValidate","autoComplete","className","css","TextField","id","label","variant","type","name","fullWidth","error","helperText","Login"],"sourceRoot":""}