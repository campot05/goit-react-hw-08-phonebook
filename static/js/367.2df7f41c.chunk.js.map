{"version":3,"file":"static/js/367.2df7f41c.chunk.js","mappings":"0OACA,EAA8B,iCAA9B,EAAqE,yBAArE,EAAsG,2B,wCCqFtG,MAhFA,WACE,OAAgCA,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,OAAQ,KAFV,eAAOC,EAAP,KAAiBC,EAAjB,KAKMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,SAASG,KAA5B,KAElCC,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACP,IAEJ,IAAMQ,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACdZ,GAAY,kBACPD,GADM,cAERF,EAAOe,IAEX,EAiBKC,EAAQ,WACZb,EAAY,CACVH,KAAM,GACNC,OAAQ,IAEX,EAED,OACE,kBAAMgB,SAvBa,SAAAJ,GACnBA,EAAEK,iBADsB,gBAGFZ,GAHE,IAGxB,2BAAgC,CAAC,IAAtBa,EAAqB,QAC9B,GACEjB,EAASF,KAAKoB,sBAAwBD,EAAQnB,KAAKoB,oBAEnD,OAAOC,EAAAA,OAAAA,QAAA,UAAkBnB,EAASF,KAA3B,4BAEV,CATuB,+BAWxBI,GAASkB,EAAAA,EAAAA,IAAWpB,IACpBc,GACD,EAU+BO,UAAWC,EAAzC,WACE,sCACO,mBACL,kBACED,UAAWC,EACXC,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRb,MAAOb,EAASF,KAChB6B,SAAUjB,QAGd,mBACA,wCACS,mBACP,kBACEW,UAAWC,EACXC,KAAK,MACLzB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRb,MAAOb,EAASD,OAChB4B,SAAUjB,QAGd,mBACA,mBAAQW,UAAWC,EAASC,KAAK,SAAjC,2BAKL,ECnFD,EAAsB,yBAAtB,EAAsD,0BAAtD,EAAuF,0BCM1EK,EAAc,WACzB,IAAM1B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,SAASG,KAA5B,IAC5BsB,GAASxB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASyB,MAAnB,IAC1BC,EAAmB1B,EAASyB,QAAO,SAAAE,GAAE,OACzCA,EAAGjC,KAAKoB,oBAAoBc,SAASH,EAAOX,oBAAoBe,OADvB,IAQ3C,OACE,eAAIZ,UAAWC,EAAf,SACGQ,EAAiBI,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIrC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACjC,OACE,gBAAasB,UAAWC,EAAxB,UACGxB,EADH,KACWC,GACT,mBACEsB,UAAWC,EACXc,QAAS,kBAAMlC,GAASmC,EAAAA,EAAAA,IAAcF,GAA7B,EAFX,sBAFOA,EAUZ,KAGN,ECnCD,EAAyB,uBAAzB,EAAwD,sB,UCmBxD,EAhBe,WACb,IAAMjC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAKkB,UAAWC,EAAhB,UACE,sDAEE,kBACED,UAAWC,EACXK,SAAU,SAAAhB,GAAC,OAAIT,GAASoC,EAAAA,EAAAA,IAAc3B,EAAEC,OAAOC,OAApC,QAKpB,ECjBD,EAA4B,4BCIb,SAAS0B,IACtB,OACE,iBAAKlB,UAAWC,EAAhB,WACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAACM,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"btn\":\"ContactForm_btn__wll+u\",\"input\":\"ContactForm_input__Bl93P\"};","import { useState, useEffect } from 'react';\nimport css from './ContactForm.module.css';\nimport { Notify } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { addContact, fetchContactsList } from 'redux/contacts/operations';\nimport { addContact, fetchContacts } from 'redux/contacts/contacts-operations';\nfunction ContactForm() {\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    for (const contact of contacts) {\n      if (\n        formData.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\n      ) {\n        return Notify.failure(`${formData.name} is already in contacts.`);\n      }\n    }\n\n    dispatch(addContact(formData));\n    reset();\n  };\n\n  const reset = () => {\n    setFormData({\n      name: '',\n      number: '',\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.contactForm}>\n      <label>\n        Name <br />\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={formData.name}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <label>\n        Number <br />\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={formData.number}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactList_btn__6Piat\",\"name\":\"ContactList_name__UCkFW\",\"list\":\"ContactList_list__csErn\"};","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n// import { useEffect } from 'react';\n// import { useAuth } from 'hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const filteredContacts = contacts.filter(el =>\n    el.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase().trim())\n  );\n\n  //   useEffect(() => {\n  //     dispatch(fetchContacts());\n  //   }, [dispatch]);\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={css.name}>\n            {name}: {number}\n            <button\n              className={css.btn}\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\n\nimport { filterContact } from 'redux/contacts/contacts-slice';\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.filter}>\n      <label>\n        Find contacts by name\n        <input\n          className={css.input}\n          onChange={e => dispatch(filterContact(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__TJkHA\"};","// import { Contac } from 'components/Contacts/Contacts';\nimport ContactForm from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport css from './Contacts.module.css';\nexport default function Contacts() {\n  return (\n    <div className={css.container}>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["useState","name","number","formData","setFormData","dispatch","useDispatch","contacts","useSelector","state","items","useEffect","fetchContacts","handleChange","e","target","value","reset","onSubmit","preventDefault","contact","toLocaleLowerCase","Notify","addContact","className","css","type","pattern","title","required","onChange","ContactList","filter","filteredContacts","el","includes","trim","map","id","onClick","deleteContact","filterContact","Contacts"],"sourceRoot":""}